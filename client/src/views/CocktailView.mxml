<?xml version="1.0" encoding="utf-8"?>
<views:ViewBase xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:components="components.*" xmlns:views="views.*" viewChanged="onViewChanged(event)" borderVisible="false">
    <views:layout>
        <s:HorizontalLayout gap="5" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"/>
    </views:layout>

    <fx:Style source="/design/newStyle.css"/>

    <fx:Script>
		<![CDATA[
        import controllers.CocktailController;
        import controllers.MainController;

        import design.DesignModel;

        import models.CocktailModel;
        import models.MainModel;
        import models.TagsModel;
        import models.UserInfoModel;
        import models.UserRoles;
        import models.events.ViewEvent;

        [Bindable]
        private var _model:CocktailModel;

        [Bindable]
        private var _controller:CocktailController;

        private function onDataLoaded(event:Event):void
        {
            _model = _controller.model;
            photo.source = _model.imageUrl;
            buildTags(_model.cocktailTypeId, _model.options);
        }

        private function buildTags(cocktailType:int, options:Array):void
        {
            tagsContainer.removeAllElements();
            tagsContainer.addElement(TagsModel.instance.getTagByIdAndType(cocktailType, TagsModel.COCKTAIL_TYPE_TAG, 64));

            if (options)
            {
                for (var i:uint = 0; i < options.length; i++)
                {
                    tagsContainer.addElement(TagsModel.instance.getTagByIdAndType(options[i], TagsModel.COCKTAIL_OPTION_TAG, 64));
                }
            }
        }

        private function onEditButtonClick(event:MouseEvent):void
        {
            MainController.instance.changeView(MainModel.ADMIN_VIEW, _model.id);
        }

        private function onViewChanged(event:ViewEvent):void
        {
            _controller = new CocktailController(Number(event.viewData));
            _controller.addEventListener(CocktailController.COCKTAIL_DATA_LOADED, onDataLoaded);
        }
        ]]>
	</fx:Script>

    <fx:Declarations>
        <!-- Place non-visual elements (e.g., services, value objects) here -->
    </fx:Declarations>

    <s:BitmapImage id="photo" width="{CocktailModel.BIG_IMAGE_WIDTH}" height="{CocktailModel.BIG_IMAGE_HEIGHT}" />
    <s:VGroup width="100%">
        <s:Label id="cocktailName" width="100%" styleName="cocktailNameText" fontSize="22" textAlign="center" text="{_model.name}"/>
        <s:TextArea id="cocktailDescription" styleName="regularText" contentBackgroundAlpha="0"
                    borderColor="{DesignModel.ORANGE_BEACH}" width="100%" height="100%"
                    editable="false" text="{_model.description}"/>
    </s:VGroup>
    <s:VGroup width="384">
        <components:GroupBox title="Ингридиенты" width="100%" borderColor="{DesignModel.ORANGE_BEACH}">
            <s:List borderVisible="false" itemRenderer="views.renderers.IngredientWithQuantityItemRenderer" width="100%"
                    dataProvider="{_model.ingredientWithQuantitiesProvider}">
                <s:layout>
                    <s:VerticalLayout requestedMinRowCount="1"/>
                </s:layout>
            </s:List>
        </components:GroupBox>
        <s:TileGroup id="tagsContainer" width="100%" horizontalGap="2" paddingLeft="0" paddingRight="0">
        </s:TileGroup>
        <s:Button visible="{UserInfoModel.instance.role == UserRoles.ADMIN}" label="Редактировать" click="onEditButtonClick(event)" />
    </s:VGroup>
</views:ViewBase>
