<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:views="views.*" creationPolicy="all"
			   applicationComplete="application1_applicationCompleteHandler(event)" initialize="application1_initializeHandler(event)"
			   xmlns:components="components.*" minWidth="1024">
	<s:layout>
		<s:BasicLayout />
	</s:layout>
	<fx:Style source="/design/main_style.css" />
	<fx:Style source="/design/newStyle.css" />
	<fx:Script>
		<![CDATA[
			import controllers.MainController;
			
			import design.DesignModel;
			
			import models.AuthModel;
			import models.MainModel;
			
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.managers.BrowserManager;
			import mx.managers.ToolTipManager;
			
			import spark.events.IndexChangeEvent;
			
			import utils.ServiceUtil;
			
			public const darkGreen:uint = DesignModel.DARK_GREEN;
			
			public const sandBeach:uint = DesignModel.SAND_BEACH;
			
			public const lightPink:uint = DesignModel.LIGHT_PINK;
			
			public const orangeBeach:uint = DesignModel.ORANGE_BEACH;
			
			public const lightGreen:uint = DesignModel.LIGHT_GREEN;
			
			[Bindable]
			private var _model:MainModel;
			
			protected function application1_applicationCompleteHandler(event:FlexEvent):void
			{
				ToolTipManager.showDelay = 300;
				AuthModel.instance.initGigyaAPI(stage);
				//
				_model = new MainModel();
				MainController.instance.model = _model;
				MainController.instance.initBrowserEngine();
				//
				callLater(hideCocktailTab);
			}
			
			private function readFlashVars():void
			{
				if (parameters.serviceAddress)
					ServiceUtil.serviceAddress = parameters.serviceAddress;
			}
			
			
			private function hideCocktailTab():void
			{
				var theTab:UIComponent = menu.dataGroup.getElementAt(2) as UIComponent;
				
				if (theTab)
				{
					theTab.visible = false;
					theTab.includeInLayout = false;
				}
			}
			
			protected function menu_changeHandler(event:IndexChangeEvent):void
			{
				MainController.instance.changeView(MainModel.VIEWS[event.newIndex], null, false);
			}
			
			protected function application1_initializeHandler(event:FlexEvent):void
			{
				readFlashVars();
				//
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>

	</fx:Declarations>

	<fx:Binding twoWay="false" source="_model.currentView.id" destination="menu.selectedIndex" />

	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:BitmapFill scaleX="0.2" scaleY="0.2" fillMode="repeat" alpha="0.5" source="@Embed(source='/../assets/cocktail-pattern.jpg')" />
		</s:fill>
	</s:Rect>
	<s:VGroup gap="0" top="20" bottom="20" width="1024" height="100%" horizontalCenter="0">
		<components:Logo />
		<s:TabBar id="menu" width="100%" height="30" dataProvider="{viewstack1}"
				  change="menu_changeHandler(event)" visible="false" includeInLayout="false" />
		<mx:ViewStack id="viewstack1" width="100%" height="100%">
			<s:NavigatorContent width="100%" height="100%" label="Конструктор коктейлей">
				<views:CocktailBuilderView width="100%" height="100%" />
			</s:NavigatorContent>
			<s:NavigatorContent width="100%" height="100%" label="Поиск по названию">
			</s:NavigatorContent>
			<s:NavigatorContent width="100%" height="100%" label="Коктейль">
				<views:CocktailView width="100%" height="100%" />
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:VGroup>
	


</s:Application>
